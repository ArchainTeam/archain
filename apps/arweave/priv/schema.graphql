type Query {
    transaction(id: ID!): Transaction
    transactions(from: [String!], to: [String!], tags: [TagInput!], limit: Int, offset: Int): [Transaction!]!
    countTransactions(from: [String!], to: [String!], tags: [TagInput!], limit: Int, offset: Int): Int!
    maxTransactionsLimit: Int!
}

type Transaction {
    id: ID!
    tags: [Tag!]!
    tagValue(tagName: String!): String
    linkedToTransaction(byOwnTag: String!): Transaction
    linkedFromTransactions(byForeignTag: String!, from: [String!], to: [String!], tags: [TagInput!], limit: Int, offset: Int): [Transaction!]!
    countLinkedFromTransactions(byForeignTag: String!, from: [String!], to: [String!], tags: [TagInput!], limit: Int, offset: Int): Int!
}

type Tag {
    name: String!
    value: String!
}

input TagInput {
    name: String!
    value: String!
}
